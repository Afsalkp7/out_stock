<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OUTSTOCK</title>
  <link rel="icon" type="image/x-icon" href="https://res.cloudinary.com/dzvvpbnai/image/upload/v1704860410/Screenshot_2024-01-10_094916_ny2sxf.jpg">
    <link rel="stylesheet" href="/css/userlog.css">
    <link rel="stylesheet" href="/css/logStyle.css">
    <link rel="stylesheet" href="/css/payment.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/js/checkoutMgt.js"></script>
    
  <style>
    @media only screen and (max-width: 475px) {
      #mainLogo {
        width: 100px;
      }
    }
  </style>

</head>

<body>

    <div id="content">
        <nav class="navbar navbar-expand-lg navbar-light shadow-sm p-4 ">
            <div class="container-fluid">
                <a href="#" class="navbar-brand"><img class="img-fluid" src="/img/logo.jpg" width="200px"  id="mainLogo" 
                        alt="logo"></a>
                <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarCollapse">
                    <div class="navbar-nav ms-5">
                        <a href="/" class="nav-item nav-link  ms-5"
                            style="font-family: Arial, Helvetica, sans-serif;font-weight: bolder;">Home</a>
                        <a href="#" class="nav-item nav-link  ms-5"
                            style="font-family: Arial, Helvetica, sans-serif;font-weight: bolder;">Shop</a>
                        <a href="#" class="nav-item nav-link  ms-5"
                            style="font-family: Arial, Helvetica, sans-serif;font-weight: bolder;">About</a>
                        <a href="#" class="nav-item nav-link  ms-5"
                            style="font-family: Arial, Helvetica, sans-serif;font-weight: bolder;">Contact</a>
                    </div>
                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto me-3">
                            <a id="userIcons" href="/wish"><img src="/img/wishlist.png" alt="wishlist" width="30px"></a>
                        </div>
                        <div class="navbar-nav me-3">
                            <a id="userIcons" href="/cart"><img src="/img/cart.png" alt="cart" width="30px"></a>
                        </div>
                        <div class="navbar-nav me-3">
                            <a href="/user"><img src="/img/person1.png" alt="admin" width="40px"></a>
                        </div>
                    </div>
                </div>

            </div>
        </nav>
    </div>


    <div class="container pt-5">

        <div class="row">
            <div class="col-md-4 order-md-2 mb-4">
                <h4 class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-muted">Your cart</span>
                    <span class="badge badge-secondary badge-pill">3</span>
                </h4>
                <ul class="list-group mb-3">
                    <script>var grandTotal = 0</script>
                    {{#each cartProducts}}
                    {{#each cartContent}}
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <img class="me-5" src="{{this.image}}" width="10%" height="10%" alt="">
                        <div>
                            <h6 class="my-0">{{this.productName}}</h6>
                            <small class="text-muted">{{this.brand}}</small>
                        </div>
                        <span class="text-muted ms-auto me-5" id="qty{{this._id}}">{{../quantity}}</span>
                        <span class="text-muted">₹<span id="total{{this._id}}"></span>/-</span>
                    </li>
                    <script>
                        var price = parseInt("{{this.price}}");
                        var qty = parseInt("{{../quantity}}");
                        var grand = price * qty;
                        document.getElementById("total{{this._id}}").textContent = grand;

                        grandTotal += grand;
                        console.log(grandTotal)
                    </script>
                    {{/each}}
                    {{/each}}

                    <li class="list-group-item d-flex justify-content-between bg-light">
                        <div class="text-danger">
                            <h6 class="my-0">Promo code</h6>
                            <small>coupon name</small>
                        </div>
                        <span class="text-danger">₹ <span id="discound">0</span> /-</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="text-success">Total (INR)</span>
                        <strong class="text-success">₹ <span id="grandTotal"></span> /-</strong>
                    </li>
                </ul>
                <script>
                    document.getElementById("grandTotal").innerHTML = grandTotal
                    var total;
                </script>

                {{#if couponApplied}}
                <script>
                    let couponType = `{{coupon.couponType}}`
                    let profit = `{{coupon.couponProfit}}`
                    let maxDis = `{{coupon.maxDis}}`

                    if (couponType == "%") {
                        let discound = parseInt((grandTotal * profit) / 100)
                        if (discound > maxDis) {
                            total = grandTotal - maxDis
                            document.getElementById("discound").innerHTML = maxDis
                        } else {
                            total = grandTotal - discound
                            document.getElementById("discound").innerHTML = discound
                        }
                        document.getElementById("grandTotal").innerHTML = total
                        grandTotal = total
                    } else {
                        let discound = parseInt(profit)
                        if (discound > grandTotal) {
                            let dis = parseInt((profit * 50) / 100)
                            total = grandTotal - dis
                            document.getElementById("discound").innerHTML = dis;
                        } else {
                            total = grandTotal - discound
                            document.getElementById("discound").innerHTML = discound
                        }
                        document.getElementById("grandTotal").innerHTML = total
                        grandTotal = total
                    }
                </script>
                {{/if}}



            </div>


            <div class="container mb-5">
                <h1>Shipping</h1>
                <p>Please confirm your shipping details.</p>
                <hr />
                <div class="form">

                    <div class="fields fields--2">
                        <label class="field">
                            <span class="field__label" for="firstname">First name</span>
                            <input class="field__input" type="text" id="firstname" value="{{checkOutData.firstName}}"
                                readonly />
                        </label>
                        <label class="field">
                            <span class="field__label" for="lastname">Last name</span>
                            <input class="field__input" type="text" id="lastname" value="{{checkOutData.lastName}}"
                                readonly />
                        </label>
                    </div>
                    <label class="field">
                        <span class="field__label" for="address">Address</span>
                        <input class="field__input" type="text" id="address" value="{{checkOutData.address}}"
                            readonly />
                    </label>
                    <label class="field">
                        <span class="field__label" for="phone">Phone number</span>
                        <input class="field__input" type="text" id="phone" value="{{checkOutData.phone}}" readonly />
                    </label>

                    <div class="fields fields--3">
                        <label class="field">
                            <span class="field__label" for="country">Country</span>
                            <input class="field__input" type="text" id="country" value="{{checkOutData.country}}"
                                readonly />
                        </label>
                        <label class="field">
                            <span class="field__label" for="state">State</span>
                            <input class="field__input" type="text" id="state" value="{{checkOutData.state}}"
                                readonly />
                        </label>
                        <label class="field">
                            <span class="field__label" for="pincode">pin code</span>
                            <input class="field__input" type="text" id="pincode" value="{{checkOutData.pin}}"
                                readonly />
                        </label>


                    </div>
                </div>
                <hr>
                <hr>
            </div>






            <div class="col-md-8 order-md-1 border border-muted">
                <h4 class="mb-3 ">PAYMENT METHODS</h4>
                <div class="container">
                    <form id="paymentMethod">

                        <div class="mt-5 mb-5">
                            <input type="text" name="orderId" id="orderId" value="{{checkOutData._id}}" hidden>

                            <input type="radio" id="razorPay" name="paymentMethod" value="razorpay">
                            <label for="razorPay"
                                style="font-size: 18px; font-weight: lighter; font-family: Arial, Helvetica, sans-serif;">RAZORPAY</label><br>
                        </div>

                        {{!-- <div class="mt-5 mb-5">
                            <input type="radio" id="paypal" name="paymentMethod" value="paypal">
                            <label for="paypal"
                                style="font-size: 18px; font-weight: lighter; font-family: Arial, Helvetica, sans-serif;">PAYPAL</label><br>
                        </div> --}}

                        <div class="mt-5 mb-5">
                            <input type="radio" id="cashOnDelivery" name="paymentMethod" value="cash on delivery">
                            <label for="cashOnDelivery"
                                style="font-size: 18px; font-weight: lighter; font-family: Arial, Helvetica, sans-serif;">CASH
                                ON DELEVERY
                            </label><br><br>
                        </div>

                        <p id="paymentAlert" style="display: none;">Select any payment method is must</p>

                        <input type="button"
                            onclick="return (placeOrderValidation()&&placeOrder(grandTotal)&&ordered())"
                            class="btn btn-dark w-100" value="Place your order">


                    </form>
                </div>
                <br>
            </div>
        </div>

        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <script src="/js/validation.js"></script>
        <script>
            var orderId;
            $(document).ready(function () {
                var settings = {
                    "url": "/placeOrder/create/orderId",
                    "method": "POST",
                    "timeout": 0,
                    "headers": {
                        "Content-Type": "application/json"
                    },
                    "data": JSON.stringify({
                        "amount": "50000"
                    }),
                };
            })

            function placeOrder(amount) {
                const paymentMethods = document.getElementsByName('paymentMethod');

                let selectedPaymentMethod;


                for (const method of paymentMethods) {
                    if (method.checked) {
                        selectedPaymentMethod = method.value;
                        break;
                    }
                }
                console.log(selectedPaymentMethod)

                if (selectedPaymentMethod === "razorpay") {
                    fetch('/placeOrder/create/orderId', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ amount: amount * 100 }), // Adjust the payload as needed
                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log(data);
                            var orderId = data.orderId;

                            var options = {

                                "key": "rzp_test_ggMnfAwdsS6oBl", // Enter the Key ID generated from the Dashboard
                                "amount": "50000", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                                "currency": "INR",
                                "name": "Outstock",
                                "description": "Buy furniture fron outstock",
                                "image": "/img/logo.png",
                                "order_id": orderId, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
                                "handler": function (response) {
                                    if (response.razorpay_payment_id) {
                                        const form = document.getElementById("paymentMethod");
                                        const formData = new FormData(form);
                                        let formItem = Object.fromEntries(formData)
                                        formItem.paymentMethod = response.razorpay_payment_id

                                        fetch("/placeOrder", {
                                            method: "POST",
                                            body: JSON.stringify(formItem),
                                            headers: { "Content-Type": "application/json" },
                                        })
                                            .then((response) => {
                                                if (!response.ok) {
                                                    throw new Error("Network response was not ok");
                                                }
                                                return response.json();
                                            })
                                            .then((data) => {
                                                console.log("Success:", data);
                                                window.location.href = `/placeOrder/${data._id}`
                                            })
                                            .catch((error) => {
                                                console.error("Error:", error);
                                            });
                                    }
                                    var settings = {
                                        "url": "/placeOrder/payment/verify",
                                        "method": "POST",
                                        "timeout": 0,
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "data": JSON.stringify({ response }),
                                    }



                                },
                                "theme": {
                                    "color": "#000000"
                                }
                            };
                            var rzp1 = new Razorpay(options);

                            rzp1.on('payment.failed', function (response) {
                                alert(response.error.code);
                                alert(response.error.description);
                                alert(response.error.source);
                                alert(response.error.step);
                                alert(response.error.reason);
                                alert(response.error.metadata.order_id);
                                alert(response.error.metadata.payment_id);
                            });

                            rzp1.open();
                            e.preventDefault();
                        })



                    $.ajax(settings).done(function (response) {

                        orderId = response.orderId;
                        console.log(orderId);
                        $("button").show();
                    });
                } else if (selectedPaymentMethod === "paypal") {
                    fetch('/placeOrder/paypal', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ amount }),
                    }).then(response => {
                        // Handle response
                    })
                        .catch(error => {
                            console.error('Fetch error:', error);
                            // Handle error: log it or display a message to the user
                        })
                }
                else {
                    return true
                }
            }

            function ordered() {
                const form = document.getElementById("paymentMethod");
                const formData = new FormData(form);
                fetch("/placeOrder", {
                    method: "POST",
                    body: JSON.stringify(Object.fromEntries(formData)),
                    headers: { "Content-Type": "application/json" },
                })
                    .then((response) => {
                        if (!response.ok) {
                            throw new Error("Network response was not ok");
                        }
                        return response.json();
                    })
                    .then((data) => {
                        console.log("Success:", data);
                        window.location.href = `/placeOrder/${data._id}`
                    })
                    .catch((error) => {
                        console.error("Error:", error);
                    });
            }
        </script>

</body>

</html>